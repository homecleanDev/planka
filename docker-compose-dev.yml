version: '3.8'

services:

  server:
    build:
      context: ./server
      dockerfile: ../config/development/Dockerfile.server
    volumes:
      - ./server:/app
      - /app/node_modules
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://user:password@postgres:5432/planka
      - SECRET_KEY=notsecretkey
      - BASE_URL=http://localhost:1337

      # - TRUST_PROXY=0
      # - TOKEN_EXPIRES_IN=365 # In days

      # related: https://github.com/knex/knex/issues/2354
      # As knex does not pass query parameters from the connection string we
      # have to use environment variables in order to pass the desired values, e.g.
      # - PGSSLMODE=<value>

      # Configure knex to accept SSL certificates
      # - KNEX_REJECT_UNAUTHORIZED_SSL_CERTIFICATE=false
      # - OIDC_ISSUER=
      # - OIDC_CLIENT_ID=
      # - OIDC_CLIENT_SECRET=
      # - OIDC_SCOPES=openid email profile
      # - OIDC_ADMIN_ROLES=admin
      # - OIDC_EMAIL_ATTRIBUTE=email
      # - OIDC_NAME_ATTRIBUTE=name
      # - OIDC_USERNAME_ATTRIBUTE=preferred_username
      # - OIDC_ROLES_ATTRIBUTE=groups
      # - OIDC_IGNORE_USERNAME=true
      # - OIDC_IGNORE_ROLES=true
      # - OIDC_ENFORCED=true

      # Email Notifications (https://nodemailer.com/smtp/)
      - SMTP_HOST=maildev
      - SMTP_PORT=1025
      - SMTP_SECURE=false
      - SMTP_USER=null
      - SMTP_PASSWORD=null
      - SMTP_FROM="Demo Demo" <demo@demo.demo>

      # - SLACK_BOT_TOKEN=
      # - SLACK_CHANNEL_ID=

    working_dir: /app
    command: ["sh", "-c", "npm run start"]
    depends_on:
      postgres:
        condition: service_healthy

  client:
    build:
      context: ./client
      dockerfile: ../config/development/Dockerfile.client
    volumes:
      - ./client:/app/client
      - /app/client/node_modules
      - /app/node_modules
    environment:
      - NODE_ENV=development
      - CHOKIDAR_USEPOLLING=true
      - BASE_URL=http://localhost:3000
      - REACT_APP_SERVER_BASE_URL=http://localhost:3000
    working_dir: /app/client
    command: npm start

  postgres:
    image: postgres:latest
    volumes:
      - db-data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: planka
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d planka"]
      interval: 10s
      timeout: 5s
      retries: 5

  proxy:
    image: nginx:alpine
    ports:
      - "3000:80"
    volumes:
      - ./config/development/nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - server
      - client
  maildev:
    image: maildev/maildev
    ports:
      - "1080:1080"
volumes:
  db-data:
